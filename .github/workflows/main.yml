name: CI

on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:

env:
  TZ: Asia/Tokyo

jobs:
  mod:
    name: Mod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: go mod download
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [mod]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: go build -o anke-to
      - uses: actions/upload-artifact@v4
        with:
          name: anke-to
          path: anke-to
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [mod]
    services:
      mysql:
        image: mariadb:10.3.9
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: anke-to
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: go install go.uber.org/mock/mockgen@latest
      - run: go generate ./...
      - run: go test ./model -v -coverprofile=coverage-model.txt -race -vet=off
        env:
          MARIADB_USERNAME: root
          MARIADB_PASSWORD: password
          MARIADB_HOSTNAME: 127.0.0.1
          MARIADB_DATABASE: anke-to
      - run: go test ./controller -v -coverprofile=coverage-controller.txt -race -vet=off
        env:
          MARIADB_USERNAME: root
          MARIADB_PASSWORD: password
          MARIADB_HOSTNAME: 127.0.0.1
          MARIADB_DATABASE: anke-to
      - name: Upload coverage data
        uses: codecov/codecov-action@v5.1.2
        with:
          files: ./coverage-model.txt ./coverage-controller.txt
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-model.txt
          path: coverage-model.txt
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-controller.txt
          path: coverage-controller.txt
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2.3
        with:
          reporter: github-pr-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true
  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Spectral checks
        uses: stoplightio/spectral-action@latest
        with:
          file_glob: docs/swagger/*.yaml